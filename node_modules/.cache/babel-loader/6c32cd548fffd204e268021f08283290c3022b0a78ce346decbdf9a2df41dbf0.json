{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mateo\\\\Desktop\\\\Mateo_Viracucha_ESPE\\\\Quinto - Sexto Nivel\\\\Sexto Nivel\\\\Programaci\\xF3 Componentes Web\\\\Segundo parcial\\\\componentreact\\\\src\\\\components\\\\Input.js\";\nimport React, { forwardRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = /*#__PURE__*/forwardRef(_c = ({\n  type = \"text\",\n  placeholder = \"\",\n  value = \"\",\n  onChange,\n  onFocus,\n  onBlur,\n  disabled = false,\n  required = false,\n  className = \"\",\n  style = {},\n  id,\n  name,\n  autoComplete,\n  maxLength,\n  minLength,\n  pattern,\n  readOnly = false,\n  size,\n  step,\n  min,\n  max,\n  label,\n  error,\n  helperText,\n  ...props\n}, ref) => {\n  const baseClasses = \"form-control\";\n  const errorClasses = error ? \"is-invalid\" : \"\";\n  const combinedClasses = `${baseClasses} ${errorClasses} ${className}`.trim();\n  const inputElement = /*#__PURE__*/_jsxDEV(\"input\", {\n    ref: ref,\n    type: type,\n    placeholder: placeholder,\n    value: value,\n    onChange: onChange,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    disabled: disabled,\n    required: required,\n    className: combinedClasses,\n    style: style,\n    id: id,\n    name: name,\n    autoComplete: autoComplete,\n    maxLength: maxLength,\n    minLength: minLength,\n    pattern: pattern,\n    readOnly: readOnly,\n    size: size,\n    step: step,\n    min: min,\n    max: max,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n\n  // Si solo hay input sin label ni mensajes, retorna solo el input\n  if (!label && !error && !helperText) {\n    return inputElement;\n  }\n\n  // Si hay label, error o helperText, envuelve en un contenedor\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-group\",\n    children: [label && /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: id,\n      className: \"form-label\",\n      children: [label, required && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger\",\n        children: \" *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), inputElement, error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid-feedback\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), helperText && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-text\",\n      children: helperText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n});\n_c2 = Input;\nInput.displayName = \"Input\";\nexport default Input;\nvar _c, _c2;\n$RefreshReg$(_c, \"Input$forwardRef\");\n$RefreshReg$(_c2, \"Input\");","map":{"version":3,"names":["React","forwardRef","jsxDEV","_jsxDEV","Input","_c","type","placeholder","value","onChange","onFocus","onBlur","disabled","required","className","style","id","name","autoComplete","maxLength","minLength","pattern","readOnly","size","step","min","max","label","error","helperText","props","ref","baseClasses","errorClasses","combinedClasses","trim","inputElement","fileName","_jsxFileName","lineNumber","columnNumber","children","htmlFor","_c2","displayName","$RefreshReg$"],"sources":["C:/Users/Mateo/Desktop/Mateo_Viracucha_ESPE/Quinto - Sexto Nivel/Sexto Nivel/ProgramaciÃ³ Componentes Web/Segundo parcial/componentreact/src/components/Input.js"],"sourcesContent":["import React, { forwardRef } from \"react\";\r\n\r\nconst Input = forwardRef(({ \r\n  type = \"text\",\r\n  placeholder = \"\",\r\n  value = \"\",\r\n  onChange,\r\n  onFocus,\r\n  onBlur,\r\n  disabled = false,\r\n  required = false,\r\n  className = \"\",\r\n  style = {},\r\n  id,\r\n  name,\r\n  autoComplete,\r\n  maxLength,\r\n  minLength,\r\n  pattern,\r\n  readOnly = false,\r\n  size,\r\n  step,\r\n  min,\r\n  max,\r\n  label,\r\n  error,\r\n  helperText,\r\n  ...props\r\n}, ref) => {\r\n  const baseClasses = \"form-control\";\r\n  const errorClasses = error ? \"is-invalid\" : \"\";\r\n  const combinedClasses = `${baseClasses} ${errorClasses} ${className}`.trim();\r\n\r\n  const inputElement = (\r\n    <input\r\n      ref={ref}\r\n      type={type}\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={onChange}\r\n      onFocus={onFocus}\r\n      onBlur={onBlur}\r\n      disabled={disabled}\r\n      required={required}\r\n      className={combinedClasses}\r\n      style={style}\r\n      id={id}\r\n      name={name}\r\n      autoComplete={autoComplete}\r\n      maxLength={maxLength}\r\n      minLength={minLength}\r\n      pattern={pattern}\r\n      readOnly={readOnly}\r\n      size={size}\r\n      step={step}\r\n      min={min}\r\n      max={max}\r\n      {...props}\r\n    />\r\n  );\r\n\r\n  // Si solo hay input sin label ni mensajes, retorna solo el input\r\n  if (!label && !error && !helperText) {\r\n    return inputElement;\r\n  }\r\n\r\n  // Si hay label, error o helperText, envuelve en un contenedor\r\n  return (\r\n    <div className=\"input-group\">\r\n      {label && (\r\n        <label htmlFor={id} className=\"form-label\">\r\n          {label}\r\n          {required && <span className=\"text-danger\"> *</span>}\r\n        </label>\r\n      )}\r\n      {inputElement}\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      {helperText && !error && <div className=\"form-text\">{helperText}</div>}\r\n    </div>\r\n  );\r\n});\r\n\r\nInput.displayName = \"Input\";\r\n\r\nexport default Input;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}